// Наведіть кілька прикладів, коли доречно використовувати в коді конструкцію try...catch.

// 1. Обробка некоректних вхідних даних або некоректного введення користувача.
// 2. Робота зі зовнішніми ресурсами, такими як бази даних, мережеві запити або файлова система.
// 3. Виконання операцій, які можуть спричинити виключні ситуації, наприклад, ділення на нуль або виходу за межі масиву.
// 4. Робота з бібліотеками або стороннім кодом, де винятки можуть виникнути під час виконання внутрішніх функцій чи методів.
// 5. Виконання асинхронних операцій, де помилки можуть бути викликані з інших потоків або процесів.
// 6. Реалізація довідкових або помилкових повідомлень для кращого розуміння причин помилок в програмі.

// Дано масив books.

const books = [
  {
    author: "Люсі Фолі",
    name: "Список запрошених",
    price: 70,
  },
  {
    author: "Сюзанна Кларк",
    name: "Джонатан Стрейндж і м-р Норрелл",
  },
  {
    name: "Дизайн. Книга для недизайнерів.",
    price: 70,
  },
  {
    author: "Алан Мур",
    name: "Неономікон",
    price: 70,
  },
  {
    author: "Террі Пратчетт",
    name: "Рухомі картинки",
    price: 40,
  },
  {
    author: "Анґус Гайленд",
    name: "Коти в мистецтві",
  },
];

// Виведіть цей масив на екран у вигляді списку (тег ul – список має бути згенерований за допомогою Javascript).
// На сторінці повинен знаходитись div з id="root", куди і потрібно буде додати цей список (схоже завдання виконувалось в модулі basic).
// Перед додаванням об'єкта на сторінку потрібно перевірити його на коректність (в об'єкті повинні міститися всі три властивості - author, name, price).
// Якщо якоїсь із цих властивостей немає, в консолі має висвітитися помилка із зазначенням - якої властивості немає в об'єкті.
// Ті елементи масиву, які не є коректними за умовами попереднього пункту, не повинні з'явитися на сторінці.

function createBookList() {
  const rootElement = document.getElementById("root");
  const ulElement = document.createElement("ul");

  books.forEach((book) => {
    try {
      if (book.author && book.name && book.price) {
        const liElement = document.createElement("li");
        const { author, name } = book;
        liElement.textContent = `${author} - ${name}`;
        ulElement.appendChild(liElement);
      } else {
        if (!book.author) {
          console.error("Missing property: author");
        }
        if (!book.name) {
          console.error("Missing property: name");
        }
        if (!book.price) {
          console.error("Missing property: price");
        }
      }
    } catch (error) {
      console.error(error.message);
    }
  });

  rootElement.appendChild(ulElement);
}

createBookList();
